* Repository e Unit of work:

- Unit of Work Pattern (Unidade de trabalho padrão): É usado para agrupar uma ou mais operações (geralmente operações de banco de dados) em uma única transação ou "unidade de trabalho", de mofo que todas as operações sejam aprovadas ou reprovadas como uma só.
O Unit of work possui como característica: Manter os objetos em memória. E enviar todas as alterações de uma única vez para o Banco de Dados.

- Repository (Padrão de Repositório): É Usado para gerenciar operações CRUD por meio de uma interface abstrata que expõe entidades de domínio (Os Models ou "Modelos", sendo por exemplo: Client, Newsletter, Pedido etc...) e oculta os detalhes de implementação do código de acesso ao banco de dados.


* Injeção de Dependência (DI):

- A classe não é mais responsável por criar ou buscar os objetos dos quais depende.
Então quando falamos em Injeção de Dependência, estamos falando de um mecanismo que permite que seja abstraido essa necessidade de instanciar uma classe e localizar ela e esse mecanismo faz isso de forma automatica localizando ela e injetando ela na classe dependente caso haja necessidade.

- DI - Serviços:

	- Translent: Cria uma instância para cada chamada.
	- Scoped: Cria uma instância para cada requisição.
	- Singleton: Cria uma instância para toda a aplicação.


* Cookie:

- São recursos do HTTP e estão disponíveis para qualquer linguagem BackEnd. Armazena informações do site, cliente, sessão e etc... e guarda essas informações no computador do usuário.

- É útil para sites com muito tráfego pois acelera o acesso e carregamento do site no computador do usuário.

- Como é guardado no computador do usuário pode ser totalmente perdido a qualquer momento.

- Utilizado muito para guardar informações do usuário como preferências de produtos ou serviços pesquisados anteriormente.


* Sessão:

- São Recursos do HTTP e informações armazenados do lado do servidor e trabalha em conjunto com o "Cookie" e são uma forma de armazenagem mais segura pois fica do lado do servidor.

- Pode ser armazenada no HD do Servidor, Banco de Dados ou na Memória RAM do Servidor.

- Principais Servidores Web: APACHE, NGINX, Microsoft IIS.

- A sessão é encerrada toda vez que fecha o navegador atual e abre um novo.


* Escalabilidade (Servidores):

- Termo utilizado para aumentar o poder de processamento de um sistema (Servidor);

- Escalabilidade Vertical: Aumento do poder de processamento da mesma máquina. Existe um certo limite seja por compatibilidade de peças ou tempo de vida do computador

- Escalabilidade Horizontal: Aumento do poder de processamento utilizando mais máquinas para trabalharem juntas. Não existe um limite de upgrade.

- PROBLEMA: Sessão fica geralmente na memória RAM se o Servidor ficar sem energia todas as informações da Sessão salvas na memória RAM de todos os usuários ativos no momento seram perdidas.
Mesmo depois de reiniciar o sistema e os usuários entrarem novamente teram que iniciar uma nova sessão com o Login e etc...

- SOLUÇÃO: Centralizar a sessão em 1 Servidor (Geralmente de banco de dados: SQL Server, Redis, NCacha etc).